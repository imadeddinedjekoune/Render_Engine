#version 440 core

const int MAX_JOINTS = 50;//max joints allowed in a skeleton
const int MAX_WEIGHTS = 3;//max number of joints that can affect a vertex

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aTexCoord;
layout (location = 2) in vec3 aNormal;
layout (location = 3) in ivec3 in_jointIndices;
layout (location = 4) in vec3 in_weights;

out vec3 FragPos;
out vec3 Normal;
out vec2 TexCoord;
out float visibility ;

uniform mat4 trasnform;
uniform mat4 cam;
uniform mat4 proj;

uniform mat4 jointTransforms[MAX_JOINTS];

uniform int scaleText ;
uniform float fakeLight ;
const float density = 0.0075 ;
const float gradient = 5.0 ;


void main()
{
	vec4 totalLocalPos = vec4(0.0);
	vec4 totalNormal = vec4(0.0);
	
	for(int i=0;i<MAX_WEIGHTS;i++){
		mat4 jointTransform = jointTransforms[in_jointIndices[i]];
		vec4 posePosition = jointTransform * vec4(aPos, 1.0);
		totalLocalPos += posePosition * in_weights[i];
		
		vec4 worldNormal = jointTransform * vec4(aNormal, 0.0);
		totalNormal += worldNormal * in_weights[i];
	}
	
    FragPos = vec3(trasnform * vec4(aPos, 1.0));
    vec3 actualNormal = aNormal ;
    if (fakeLight > 0.5)
    {
       actualNormal = vec3(0.0,1.0,0.0);  
    }
    Normal = mat3(transpose(inverse(trasnform))) * actualNormal; 
    vec4 distance =  cam * vec4(FragPos, 1.0);
    gl_Position = proj * cam * trasnform * totalLocalPos ;
	//* totalLocalPos vec4(aPos, 1.0);
    TexCoord = vec2(aTexCoord.x, aTexCoord.y)*scaleText;
    float dist = length(distance.xyz);
    visibility = exp(-pow((dist*density),gradient));
    visibility = clamp(visibility,0.0,1.0);

}